import logging
from aiogram import Bot, Dispatcher, executor, types

import os
from ffprobe import FFProbe
from datetime import datetime, timedelta

API_TOKEN = '<BOT-TOKEN>'
UTC_OFFSET = 0
MAX_ALLOWED_DIFF = 60  # seconds

# Configure logging
logging.basicConfig(level=logging.INFO)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    await bot.send_sticker(msg.from_user.id, "CAACAgIAAxkBAAM9YXfH5sCS-41cwfqE5wF6I25R3U4AAqkRAALI5XFJY-8zAfzb5vghBA")
    await bot.send_message(msg.from_user.id,
                           "<b>‚úåÔ∏è–ü—Ä–∏–≤–µ—Ç!</b>\n–ü–µ—Ä–µ—à–ª–∏ –º–Ω–µ –≤–∏–¥–µ–æ –∑–∞–º–µ—Ç–∫—É –∏–∑ —á–∞—Ç–∞, —á—Ç–æ–±—ã —è –µ—ë –ø—Ä–æ–≤–µ—Ä–∏–ª.\n\n‚ö†Ô∏è<b><i>–í–Ω–∏–º–∞–Ω–∏–µ!\n–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å –∑–∞–º–µ—Ç–∫—É –∏–∑ —á–∞—Ç–∞ —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º, —ç—Ç–æ –≤–∞–∂–Ω–æ.</i></b>\nüïí –¢–∞–∫–∂–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —á—Ç–æ –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –≤ UTC+0.\n\n<i>–í–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ —É–¥–∞–ª—è—é—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.</i>",
                           parse_mode="html")


@dp.message_handler(commands=['help'])
async def help(msg: types.Message):
    await msg.reply("""–ö—Ä—á –æ–±—ä—è—Å–Ω—è—é –ø—Ä–æ <b>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ</b> –≤ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è—Ö –¢–µ–ª–µ–≥—Ä–∞–º, –¥–ª—è —Ç–µ—Ö –∫—Ç–æ –Ω–µ –≤ –∫—É—Ä—Å–∞—Ö.
–ö–æ–≥–¥–∞ –≤–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ <i>(–∫—Ä—É–≥–ª–æ–µ —Ç–∞–∫–æ–µ)</i>, –ø–æ —Å—É—Ç–∏ –∏—Ö –ø–æ–¥–¥–µ–ª–∞—Ç—å –Ω–µ–ª—å–∑—è - –∏–ª–∏ —Ç–∞–∫ –∫–∞–∂–µ—Ç—Å—è, –≤–µ–¥—å –æ–Ω–∏ –±—ã–ª–∏ –∑–∞–ø–∏—Å–∞–Ω—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ.

–ù–û, –Ω–∏—á—Ç–æ –Ω–µ –º–µ—à–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫—É –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ, –∑–∞–∫–∏–Ω—É—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, –∏ –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å <i>(—Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –ø–æ–¥—É–º–∞–µ—Ç, —á—Ç–æ –∑–∞–ø–∏—Å–∞–Ω–æ –±—ã–ª–æ —Ç–æ–ª—å–∫–æ —á—Ç–æ)</i>.
–ò –¥–∞–∂–µ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ <i>"–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ"</i> –º–æ–∂–Ω–æ –ø–æ–¥–¥–µ–ª–∞—Ç—å.
–ü—Ä–∏—á–µ–º –ø–æ–º–µ—Ç–∫—É –æ —Ñ–æ—Ä–≤–∞—Ä–¥–µ —Ç–æ–∂–µ –º–æ–∂–Ω–æ –ª–µ–≥–∫–æ —É–±—Ä–∞—Ç—å <i>(–¥–∞–∂–µ –Ω–∞ –ü–ö)</i>.

–¢–∞–∫ –≤–æ–æ–æ—Ç üåö
–û–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, —Ç–µ–ª–µ–≥—Ä–∞–º –ø—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç –≤ <b>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ</b> –¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª–∞ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è - —Ç–æ—á–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏.
–ò –≤–æ—Ç —ç—Ç–æ —É–∂–µ –Ω–∏–∫—Ç–æ –ø–æ—á—Ç–∏ –Ω–µ –∑–Ω–∞–µ—Ç –∏ —Ñ–∏–≥ –ø–æ–¥–¥–µ–ª–∞–µ—Ç.
–ê –∑–Ω–∞—á–∏—Ç, —á—Ç–æ–±—ã —É–¥–æ—Å—Ç–æ–≤–µ—Ä–∏—Ç—å—Å—è —á—Ç–æ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ —Ä–µ–∞–ª—å–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –µ–≥–æ —Ç–µ–±–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ –∫–∞–∫ —Ñ–∞–π–ª –∏ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ —Å–≤–æ–π—Å—Ç–≤–∞ —Ñ–∞–π–ª–∞.

–ö—Ä—á —Ç–∞–∫–∏–µ –¥–µ–ª–∞ ü§î
–ê –Ω–∞—à –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —ç—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å—é–¥–∞ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–º.""", parse_mode="html")


@dp.message_handler(content_types=types.ContentType.all())
async def check(msg: types.Message):
    if msg.content_type == "video_note":
        #  identify file path
        file = await bot.get_file(msg.video_note.file_id)
        file_path = file.file_path

        # download video note as a file
        if not os.path.exists('temp'):
            os.makedirs('temp')

        local_temp_filename = f"temp/{msg.from_user.id}_{os.path.basename(file_path)}"
        await bot.download_file(file_path, local_temp_filename)

        # retrieve a video note creation_date from a metadata (using FFProbe)
        metadata = FFProbe(local_temp_filename)

        if "creation_time" not in metadata.metadata:
            await msg.reply("–í –≤–∏–¥–µ–æ –∑–∞–º–µ—Ç–∫–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏!")
            return

        _creation_date = datetime.strptime(metadata.metadata["creation_time"].split('.')[0], "%Y-%m-%dT%H:%M:%S")
        creation_date = _creation_date + timedelta(hours=UTC_OFFSET)

        # compare & reply
        if msg.is_forward():
            diff = abs(msg.forward_date - creation_date)
        else:
            diff = abs(msg.date - creation_date)

        answer = f"<b>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏: </b><b><i>{creation_date}</i></b>\n"
        answer += f"<b>–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: </b><b><i>{msg.forward_date if msg.is_forward() else msg.date}</i></b>\n\n"

        if diff.total_seconds() > MAX_ALLOWED_DIFF:
            answer += f"‚ùóÔ∏è –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∏ –¥–∞—Ç–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è –∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç <b><i>{MAX_ALLOWED_DIFF}—Å.</i></b>!!!\n\n<i>–ù–æ –º—ã –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é —É –≤–∞—à–µ–≥–æ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.</i> "
        else:
            answer += f"‚úÖ –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∞—Ç–æ–π —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –∏ –¥–∞—Ç–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–ø—É—Å—Ç–∏–º–∞—è –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤—Å–µ–≥–æ <b><i>{int(diff.total_seconds())}—Å.</i></b>"

        await msg.reply(answer, parse_mode="html")

        # remove a file
        os.remove(local_temp_filename)

    else:
        await msg.reply("–ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ –∑–∞–º–µ—Ç–∫–∏!")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
